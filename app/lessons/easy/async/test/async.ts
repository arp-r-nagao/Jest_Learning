export const asyncTest = () => {
  return [
    {
      title: 'Promiseを返す関数のテスト',
      question: 'Promiseの完了を待つテストを記述してください。',
      codes: [
        {code: `test('取得結果はチョコレート',() => {`},
        {code: 'editorStartSentence'},
        {code: 'fetchData().then(data =>{'},
        {code: `  expect(data).toBe('チョコレート');`},
        {code: '});'},
      ],
      answer: 'return',
    },
    {
      title: 'async/awaitを使用した非同期テスト',
      question: 'async/awaitを使用したテストを記述してください。',
      codes: [
        {code: `test('エラーで失敗する', async () => {`},
        {code: '  expect.assertions(1);'},
        {code: 'try{'},
        {code: 'editorStartSentence'},
        {code: 'fetchData();'},
        {code: '}catch(error){'},
        {code: `  expect(error).toMatch('error')`},
        {code: '}'},
        {code: '});'},
      ],
      answer: 'await',
    },
    {
      title: 'async/awaitを使用した非同期テスト',
      question: 'async/awaitを使用したテストを記述してください。',
      codes: [
        {code: `test('取得結果はチョコレート',`},
        {code: 'editor'},
        {code: '() => {'},
        {code: '  const data = await'},
        {code: '  fetchData();'},
        {code: `    expect(data).toBe('チョコレート');`},
        {code: '});'},
      ],
      answer: 'async',
    },
    {
      title: 'コールバックを使用した非同期テスト',
      question: 'コールバックを使用したテストを記述してください。',
      codes: [
        {code: `test('取得結果はチョコレート', `},
        {code: 'editor'},
        {code: ` => {`},
        {code: '  function callback(error, data) {'},
        {code: '    if (error) {'},
        {code: '      done(error);'},
        {code: '      return;'},
        {code: '    }'},
        {code: '    try {'},
        {code: '      //省略'},
        {code: '    }'},
        {code: '  }'},
        {code: '  fetchData(callback);'},
        {code: '});'},
      ],
      answer: 'done',
    },
    {
      title: 'resolves/rejectsを使用した非同期テスト',
      question: 'Promiseが失敗することをテストしてください。',
      codes: [
        {code: `test('取得結果はチョコレート', () => {`},
        {code: '  return expect(fetchData())'},
        {code: 'editor'},
        {code: `.toMatch('error');`},
        {code: '});'},
      ],
      answer: '.rejects',
    },
  ];
};
